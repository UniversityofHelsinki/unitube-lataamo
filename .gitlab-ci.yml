image: node:12-alpine

# Cache node modules - speeds up future builds
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules

stages:
  - compile
  - build
  - audit_scan
  - test
  - deploy

# ------------------------------ compile stage ------------------------------

compile:
  stage: compile
  tags:
    - ohtu-build-2
  script:
    - npm install
# ------------------------------ test stage ------------------------------

test:
  stage: test
  tags:
    - ohtu-build-2
  script:
    - npm test
  coverage: /All files\s*\|\s*([\d\.]+)/
  ### ToDo: selvitä ajaako Gitlab automaattisesti Jestiä CI-moodissa (ts. ei interaktiivisesti)
  ### vai pitäisikö asettaa käsin Jestille optio --ci (tai --watchAll=false), esim. npm test -- --ci

# ------------------------------ build stage ------------------------------

build_oc_test:
  stage: build
  tags:
    - ohtu-build-2
  only:
    - oc-test
  script:
    - yes | cp -f -v .env.oc-test .env.production || true
    - npm run build
  artifacts:
    name: lataamo-build
    paths:
      - build

build_dev:
  stage: build
  tags:
    - ohtu-build-2
  only:
    - master
  script:
    - yes | cp -f -v .env.development .env.production || true
    - npm run build
  artifacts:
    name: lataamo-build
    paths:
      - build

build_test:
  stage: build
  tags:
    - ohtu-build-2
  only:
    - test
  script:
    - yes | cp -f -v .env.testing .env.production || true
    - npm rebuild node-sass
    - npm run build
  artifacts:
    name: lataamo-build
    paths:
      - build

build_prod:
  stage: build
  tags:
    - ohtu-build-2
  only:
    - prod
  script:
    - npm rebuild node-sass
    - npm run build
  artifacts:
    name: lataamo-build
    paths:
      - build


# ------------------------------ deploy stage ------------------------------

# common script for all deploy jobs
# substitute variables
#   $SSH_PRIVATE_KEY  <-- from Gitlab CI env variables
#   $LATAAMO_USER     <-- from Gitlab CI env variables
#   $SERVER           <-- define within each deploy job  <-- from Gitlab CI env variables
.deploy_script:
  script:
    - echo "====== Install rsync and openssh ========="
    - apk add --no-cache rsync openssh
    - echo "====== Activate the ssh-agent ========"
    - eval $(ssh-agent -s)
    - echo "======= Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store ====="
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - echo "====== Add target servers secret key ======"
    - mkdir ~/.ssh
    - echo $SSH_PRIVATE_KEY  >> ~/.ssh/id_rsa
    - chmod 700 ~/.ssh && chmod 600 ~/.ssh/*
    - echo "====== Test ssh connection and make react-app folder if not exist ======"
    - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -T $LATAAMO_USER@$SERVER "mkdir -p /home/lataamo/react-app"
    - echo "====== Sync local and remote directory ======"
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - rsync -azPq -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" --delete ./build/ $LATAAMO_USER@$SERVER:/home/lataamo/react-app

.deploy_to_ohtumetri_script:
  script:
    - echo "====== Install rsync and openssh ========="
    - apk add --no-cache rsync openssh
    - echo "====== Activate the ssh-agent ========"
    - eval $(ssh-agent -s)
    - echo "======= Add the SSH key stored in SSH_PRIVATE_KEY_OHTUMETRI variable to the agent store ====="
    - echo "$SSH_PRIVATE_KEY_OHTUMETRI" | tr -d '\r' | ssh-add - > /dev/null
    - echo "====== Add target servers secret key ======"
    - mkdir ~/.ssh
    - echo $SSH_PRIVATE_KEY_OHTUMETRI  >> ~/.ssh/id_rsa
    - chmod 700 ~/.ssh && chmod 600 ~/.ssh/*
    - echo "====== Test ssh connection and make unitube-lataamo-frontend folder if not exist ======"
    - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -T $OHTUMETRI_USER@$SERVER_OHTUMETRI "mkdir -p /var/www/html/unitube-lataamo-frontend"
    - echo "====== Sync local and remote directory ======"
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - rsync -azPq -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" --delete ${CI_PROJECT_DIR}/report.html $LATAAMO_USER@$SERVER_OHTUMETRI:/var/www/html/unitube-lataamo-frontend
    - rsync -azPq -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" ${CI_PROJECT_DIR}/outdated-report.html $LATAAMO_USER@$SERVER_OHTUMETRI:/var/www/html/unitube-lataamo-frontend

# deploy to oc test environment
deploy_oc_test:
  stage: deploy
  environment:
    name: development
    url: https://$LATAAMO_OC_TEST
  only:
    - oc-test
  variables:
    SERVER: $LATAAMO_OC_TEST
  before_script:
    - echo "====== Deploy to development server ========"
  extends: .deploy_script

# deploy to development environment
deploy_dev:
  stage: deploy
  environment:
    name: development
    url: https://$LATAAMO_DEV
  only:
    - master
  except:
    - schedules
  variables:
    SERVER: $LATAAMO_DEV
  before_script:
    - echo "====== Deploy to development server ========"
  extends: .deploy_script

# deploy to test environment
deploy_test:
  stage: deploy
  environment:
    name: test
    url: https://$LATAAMO_TEST
  only:
    - test
  variables:
    SERVER: $LATAAMO_TEST
  before_script:
    - echo "====== Deploy to test server ========"
  extends: .deploy_script

# deploy to prod environment
deploy_prod:
  stage: deploy
  environment:
    name: production
    url: https://$LATAAMO_PROD
  only:
    - prod
  when: manual
  variables:
    SERVER: $LATAAMO_PROD
  before_script:
    - echo "====== Deploy to production server ========"
  extends: .deploy_script


dependency scanning:
  stage: audit_scan
  tags:
    - ohtu-build-2
  allow_failure: true
  only:
    - OHTU-620
  before_script:
    - apk add --no-cache curl
    - npm install -g npm-audit-html
    - npm install -g npm-outdated-html
    - echo "====== Send scanning reports to ohtumetri server ========"
  extends: .deploy_to_ohtumetri_script
  script:
    - echo $(npm audit --json | npm-audit-html --output ${CI_PROJECT_DIR}/report.html)
    - echo $(npm outdated --long --json | npm-outdated-html --output ${CI_PROJECT_DIR}/outdated-report.html)
    - echo "Send Slack Messages"
    - "curl -F file=@${CI_PROJECT_DIR}/report.html -F 'initial_comment=Unitube Lataamo Audit File ' -F channels=C01KV33GE90 -F filename=audit-report.html -F filetype=html -H 'Authorization: Bearer '${TOKEN} https://slack.com/api/files.upload"
    - "curl -F file=@${CI_PROJECT_DIR}/outdated-report.html -F 'initial_comment=Unitube Lataamo Outdated File ' -F channels=C01KV33GE90 -F filename=outdated-report.html  filetype=html -H 'Authorization: Bearer '${TOKEN} https://slack.com/api/files.upload"



